---
- name: Déployer application Symfony avec Docker Compose et Caddy
  hosts: production
  become: yes
  vars_files:
    - vars/main.yaml

  tasks:
    - name: Installer les dépendances système
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - git
        state: present
        update_cache: yes

    -   name: Installer PHP et extensions
        apt:
            name:
                - "php{{ php_version }}"
                - "php{{ php_version }}-fpm"
                - "php{{ php_version }}-mysql"
                - "php{{ php_version }}-xml"
                - "php{{ php_version }}-dom"
                - "php{{ php_version }}-simplexml"
                - "php{{ php_version }}-mbstring"
                - "php{{ php_version }}-curl"
                - git
                - unzip
            state: present
            update_cache: yes

    - name: Ajouter la clé GPG Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Ajouter le dépôt Docker
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Installer Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Démarrer et activer Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Ajouter la clé GPG Caddy
      apt_key:
        url: https://dl.cloudsmith.io/public/caddy/stable/gpg.key
        state: present

    - name: Ajouter le dépôt Caddy
      apt_repository:
        repo: "deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main"
        state: present

    - name: Installer Caddy
      apt:
        name: caddy
        state: present
        update_cache: yes

    - name: Créer le répertoire de l'app
      file:
        path: "{{ app_path }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Cloner le code depuis Git
      git:
        repo: "{{ git_repo }}"
        dest: "{{ app_path }}"
        version: "{{ git_branch }}"
        force: yes
      become_user: "{{ ansible_user }}"



    - name: Arrêter les conteneurs Docker existants
      shell: |
        cd {{ app_path }}
        docker compose down
      become_user: "{{ ansible_user }}"
      ignore_errors: yes

    - name: Construire et démarrer les conteneurs Docker
      shell: |
        cd {{ app_path }}
        make prod
      become_user: "{{ ansible_user }}"

    -   name: Installer les dépendances
        shell: |
            cd {{ app_path }}
            composer install
        become_user: "{{ ansible_user }}"

    - name: Configurer Caddy
      template:
        src: Caddyfile.j2
        dest: /etc/caddy/Caddyfile
        owner: caddy
        group: caddy
        mode: '0644'
      notify: restart caddy

    - name: Démarrer et activer Caddy
      systemd:
        name: caddy
        state: started
        enabled: yes
      become: yes

  handlers:
    - name: restart caddy
      systemd:
        name: caddy
        state: restarted
      become: yes
